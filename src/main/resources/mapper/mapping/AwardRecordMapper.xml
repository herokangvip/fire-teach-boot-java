<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.AwardRecordMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.domain.AwardRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="act_id" jdbcType="VARCHAR" property="actId" />
    <result column="source_bus_id" jdbcType="VARCHAR" property="sourceBusId" />
    <result column="bus_id" jdbcType="VARCHAR" property="busId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="award_type" jdbcType="INTEGER" property="awardType" />
    <result column="award_biz_data" jdbcType="VARCHAR" property="awardBizData" />
    <result column="receive_request" jdbcType="VARCHAR" property="receiveRequest" />
    <result column="receive_response" jdbcType="VARCHAR" property="receiveResponse" />
    <result column="receive_status" jdbcType="INTEGER" property="receiveStatus" />
    <result column="retry_times" jdbcType="INTEGER" property="retryTimes" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="stock_id" jdbcType="VARCHAR" property="stockId" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
  </resultMap>
  <sql id="Base_Column_List">
    id, act_id, source_bus_id, bus_id, user_id, award_type, award_biz_data, receive_request, 
    receive_response, receive_status, retry_times, create_time, update_time, stock_id, 
    amount
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_award_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_award_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.domain.AwardRecord">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_award_record (id, act_id, source_bus_id, 
      bus_id, user_id, award_type, 
      award_biz_data, receive_request, receive_response, 
      receive_status, retry_times, create_time, 
      update_time, stock_id, amount
      )
    values (#{id,jdbcType=BIGINT}, #{actId,jdbcType=VARCHAR}, #{sourceBusId,jdbcType=VARCHAR}, 
      #{busId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{awardType,jdbcType=INTEGER}, 
      #{awardBizData,jdbcType=VARCHAR}, #{receiveRequest,jdbcType=VARCHAR}, #{receiveResponse,jdbcType=VARCHAR}, 
      #{receiveStatus,jdbcType=INTEGER}, #{retryTimes,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{stockId,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.domain.AwardRecord">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_award_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="actId != null">
        act_id,
      </if>
      <if test="sourceBusId != null">
        source_bus_id,
      </if>
      <if test="busId != null">
        bus_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="awardType != null">
        award_type,
      </if>
      <if test="awardBizData != null">
        award_biz_data,
      </if>
      <if test="receiveRequest != null">
        receive_request,
      </if>
      <if test="receiveResponse != null">
        receive_response,
      </if>
      <if test="receiveStatus != null">
        receive_status,
      </if>
      <if test="retryTimes != null">
        retry_times,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="stockId != null">
        stock_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="actId != null">
        #{actId,jdbcType=VARCHAR},
      </if>
      <if test="sourceBusId != null">
        #{sourceBusId,jdbcType=VARCHAR},
      </if>
      <if test="busId != null">
        #{busId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="awardType != null">
        #{awardType,jdbcType=INTEGER},
      </if>
      <if test="awardBizData != null">
        #{awardBizData,jdbcType=VARCHAR},
      </if>
      <if test="receiveRequest != null">
        #{receiveRequest,jdbcType=VARCHAR},
      </if>
      <if test="receiveResponse != null">
        #{receiveResponse,jdbcType=VARCHAR},
      </if>
      <if test="receiveStatus != null">
        #{receiveStatus,jdbcType=INTEGER},
      </if>
      <if test="retryTimes != null">
        #{retryTimes,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stockId != null">
        #{stockId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.domain.AwardRecord">
    update t_award_record
    <set>
      <if test="actId != null">
        act_id = #{actId,jdbcType=VARCHAR},
      </if>
      <if test="sourceBusId != null">
        source_bus_id = #{sourceBusId,jdbcType=VARCHAR},
      </if>
      <if test="busId != null">
        bus_id = #{busId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="awardType != null">
        award_type = #{awardType,jdbcType=INTEGER},
      </if>
      <if test="awardBizData != null">
        award_biz_data = #{awardBizData,jdbcType=VARCHAR},
      </if>
      <if test="receiveRequest != null">
        receive_request = #{receiveRequest,jdbcType=VARCHAR},
      </if>
      <if test="receiveResponse != null">
        receive_response = #{receiveResponse,jdbcType=VARCHAR},
      </if>
      <if test="receiveStatus != null">
        receive_status = #{receiveStatus,jdbcType=INTEGER},
      </if>
      <if test="retryTimes != null">
        retry_times = #{retryTimes,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stockId != null">
        stock_id = #{stockId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.AwardRecord">
    update t_award_record
    set act_id = #{actId,jdbcType=VARCHAR},
      source_bus_id = #{sourceBusId,jdbcType=VARCHAR},
      bus_id = #{busId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      award_type = #{awardType,jdbcType=INTEGER},
      award_biz_data = #{awardBizData,jdbcType=VARCHAR},
      receive_request = #{receiveRequest,jdbcType=VARCHAR},
      receive_response = #{receiveResponse,jdbcType=VARCHAR},
      receive_status = #{receiveStatus,jdbcType=INTEGER},
      retry_times = #{retryTimes,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      stock_id = #{stockId,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="countByUserIdAndActivityCodeToday" resultType="java.lang.Integer">
    select count(*) from t_award_record where
      user_id = #{userId} and create_time<![CDATA[ >= ]]>#{start} and create_time<![CDATA[ < ]]>#{end}
  </select>
</mapper>